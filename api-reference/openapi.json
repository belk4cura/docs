{
  "openapi": "3.0.3",
  "info": {
    "title": "Extension Control API v1",
    "version": "1.0.0",
    "description": "API for initiating and managing browser automation tasks via the extension.\nAuthentication requires `X-API-Key`, `X-Timestamp`, and `X-Signature` headers.\nThe `X-Signature` is an HMAC-SHA256 hash of `timestamp + method + path + request_body` using the API Secret.\nRefer to the [Developer Guide](../../docs/developer/overview.md) for detailed authentication steps."
  },
  "servers": [
    {
      "url": "https://api.yourdomain.com/v1",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "Tasks",
      "description": "Operations related to automation tasks"
    }
  ],
  "paths": {
    "/tasks": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Initiate Task",
        "description": "Initiate a new automation task for a specific end-user.",
        "operationId": "initiateTask",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["developer_user_id", "instructions"],
                "properties": {
                  "developer_user_id": {
                    "type": "string",
                    "description": "Unique identifier for the end-user in your system whose extension should be targeted.",
                    "example": "user-unique-id-in-your-system"
                  },
                  "instructions": {
                    "type": "string",
                    "description": "Natural language instruction for the LLM to execute.",
                    "example": "Navigate to google.com and search for 'best AI assistants'."
                  },
                  "target_url": {
                    "type": "string",
                    "description": "Optional initial URL context for the task.",
                    "example": "https://google.com"
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "developer_user_id": "user_789",
                    "instructions": "Check my latest email subject."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted. The task was successfully queued.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_id": {
                      "type": "string",
                      "description": "The unique identifier for the newly created task.",
                      "example": "tsk_abc123xyz789"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial status of the task.",
                      "example": "queued",
                      "enum": ["queued", "processing", "completed", "failed"]
                    }
                  }
                },
                "example": {
                  "task_id": "tsk_abc123xyz789",
                  "status": "queued"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "security": [ { "ApiKeyAuth": [] } ]
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get Task Status",
        "description": "Retrieve the current status and results (if available) of a specific task. Poll this endpoint after initiating a task.",
        "operationId": "getTaskStatus",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The ID of the task to retrieve.",
            "schema": {
              "type": "string",
              "example": "tsk_abc123xyz789"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Current status and details of the task.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskStatus" },
                "examples": {
                  "inProgress": {
                    "summary": "Task In Progress",
                    "value": {
                      "task_id": "tsk_abc123xyz789",
                      "status": "processing",
                      "result": null,
                      "error": null,
                      "created_at": "2025-04-13T23:00:00Z",
                      "updated_at": "2025-04-13T23:01:00Z"
                    }
                  },
                  "completed": {
                    "summary": "Task Completed Successfully",
                    "value": {
                      "task_id": "tsk_abc123xyz789",
                      "status": "completed",
                      "result": {
                        "summary": "Search performed, first result obtained.",
                        "data": { "first_link": "https://example-ai-site.com" }
                      },
                      "error": null,
                      "created_at": "2025-04-13T23:00:00Z",
                      "updated_at": "2025-04-13T23:05:00Z"
                    }
                  },
                  "failed": {
                    "summary": "Task Failed",
                    "value": {
                      "task_id": "tsk_abc123xyz789",
                      "status": "failed",
                      "result": null,
                      "error": "Extension connection lost during execution.",
                      "created_at": "2025-04-13T23:00:00Z",
                      "updated_at": "2025-04-13T23:02:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/ForbiddenTaskId" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "429": { "$ref": "#/components/responses/TooManyRequests" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        },
        "security": [ { "ApiKeyAuth": [] } ]
      }
    }
  },
  "webhooks": {
    "taskUpdate": {
      "post": {
        "summary": "Task Update Notification",
        "description": "Notifies the configured webhook URL when a task status changes to 'completed' or 'failed'.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_type": {
                    "type": "string",
                    "description": "The type of event that occurred.",
                    "enum": ["task.completed", "task.failed"],
                    "example": "task.completed"
                  },
                  "data": { "$ref": "#/components/schemas/TaskStatus" }
                }
              },
              "example": {
                "event_type": "task.completed",
                "data": {
                  "task_id": "tsk_abc123xyz789",
                  "status": "completed",
                  "result": { "summary": "Task complete", "data": {} },
                  "error": null,
                  "created_at": "2025-04-13T23:00:00Z",
                  "updated_at": "2025-04-13T23:05:00Z"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. Webhook received successfully. Your endpoint should respond quickly."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TaskStatus": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "string",
            "description": "The unique identifier for the task.",
            "example": "tsk_abc123xyz789"
          },
          "status": {
            "type": "string",
            "description": "The current status of the task.",
            "enum": ["queued", "processing", "completed", "failed"],
            "example": "processing"
          },
          "result": {
            "type": "object",
            "nullable": true,
            "description": "The result object if the task completed successfully. Structure may vary.",
            "properties": {
              "summary": {
                "type": "string",
                "description": "A summary of the task result."
              },
              "data": {
                "type": "object",
                "additionalProperties": true,
                "description": "Detailed data results."
              }
            },
            "example": {
              "summary": "Search performed, first result obtained.",
              "data": { "first_link": "https://example-ai-site.com" }
            }
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Error message if the task failed.",
            "example": "Extension connection lost during execution."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp when the task was created.",
            "example": "2025-04-13T23:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp when the task was last updated.",
            "example": "2025-04-13T23:01:00Z"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "An internal error code."
          },
          "message": {
            "type": "string",
            "description": "A human-readable error message."
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request. Invalid request body (e.g., missing fields, wrong types).",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" },
            "example": {
              "code": "INVALID_INPUT",
              "message": "Missing required field: developer_user_id"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. Invalid or missing authentication headers (X-API-Key, X-Timestamp, X-Signature).",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" },
            "example": {
              "code": "AUTH_ERROR",
              "message": "Invalid API Key or Signature."
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. API Key is valid but lacks permission for this action.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" },
            "example": {
              "code": "PERMISSION_DENIED",
              "message": "API Key does not have permission for this operation."
            }
          }
        }
      },
      "ForbiddenTaskId": {
        "description": "Forbidden. API Key is valid but does not own the specified Task ID.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" },
            "example": {
              "code": "ACCESS_DENIED",
              "message": "Access to the specified task is denied."
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found. No resource found matching the request (e.g., unknown Task ID).",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" },
            "example": {
              "code": "NOT_FOUND",
              "message": "Task with the specified ID not found."
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests. Rate limit exceeded. Check rate limit headers.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" },
            "example": {
              "code": "RATE_LIMIT_EXCEEDED",
              "message": "You have exceeded the request rate limit."
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error. An unexpected error occurred on the backend.",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" },
            "example": {
              "code": "SERVER_ERROR",
              "message": "An internal server error occurred."
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API Key provided by the platform. Note- X-Timestamp and X-Signature headers are also required for authentication, but not defined as separate schemes here due to OpenAPI limitations on complex signature schemes."
      }
    }
  }
}
